{"version":3,"sources":["assets/android-chrome-512x512.png","components/SnackBarInformation/SnackBarInformation.js","components/Table/TableToolbar.js","components/Table/TableHeader.js","components/Table/Table.js","components/SignalCreation/ConstantFault.js","components/SignalCreation/RandomGBN.js","components/SignalCreation/RandomWalk.js","components/SignalCreation/SignalCreation.js","components/EditFaults/FormEdit.js","components/PlotData/PlotData.js","components/Buttons/ConfirmBackButtons.js","components/EditFaults/EditFaults.js","components/Visualize/Visualize.js","components/SignalCreation/NoiseForm.js","components/CreateSeries/CreateSeries.js","config/views.js","containers/Dashboard.js","containers/listitems.js","App.js","serviceWorker.js","utils/utils.js","store/DataStore.js","index.js"],"names":["module","exports","__webpack_require__","p","ConsecutiveSnackbars","queue","state","open","messageInfo","createMessage","loading","message","react_default","a","createElement","className","_this","classes","wraploadingmsg","CircularProgress_default","progress","this","props","to_open","message_prop","handleClose","msg","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","onExited","handleExited","ContentProps","aria-describedby","id","action","IconButton_default","key","aria-label","color","close","onClick","Close_default","React","Component","withStyles","theme","padding","spacing","unit","margin","display","styled","root","paddingRight","highlight","palette","type","secondary","main","backgroundColor","lighten","light","text","primary","dark","spacer","flex","actions","title","selected","handleDeleteClick","Toolbar_default","classNames","Object","defineProperty","length","Typography_default","variant","Tooltip_default","e","store","Delete_default","FilterList_default","rows","numeric","disablePadding","label","EnhancedTableHead","createSortHandler","property","event","onRequestSort","_this2","_this$props","onSelectAllClick","order","orderBy","numSelected","rowCount","TableHead_default","TableRow_default","TableCell_default","Checkbox_default","indeterminate","checked","onChange","map","row","sortDirection","enterDelay","TableSortLabel_default","active","direction","inject","observer","desc","b","EnhancedTable","page","rowsPerPage","storeGlobal","handleDeleteTableClick","setState","handleRequestSort","handleSelectAllClick","target","dataTable","formattedTableData","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","handleChangePage","handleChangeRowsPerPage","value","isSelected","handleDownload","serie","series","filter","v","download","values","router","_this$state","emptyRows","Math","min","Paper_default","TableToolbar","tableWrapper","Table_default","table","aria-labelledby","TableHeader","TableBody_default","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","hover","role","aria-checked","tabIndex","component","scope","name","goTo","views","EditOutlined_default","fault","GetAppOutlined_default","max","size","style","height","colSpan","TablePagination_default","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","width","marginTop","minWidth","ConstantFault","handleFaultConfig","valConstant","faultConfig","parseFloat","dataStore","TextField_default","textField","injectedObserved","flexWrap","flexFlow","flexBasis","formControl","RandomGBN","faultStores","gbn","low_value","handleModifyValue","upp_value","prob_change","min_constant","RandomWalk","randomWalk","start_val","prob_down","prob_up","amplitude","faultTypesSelections","SignalCreation","labelWidth","age","handleChange","addFormAfterTypeSelection","faultType","toLowerCase","SignalCreation_ConstantFault","SignalCreation_RandomGBN","SignalCreation_RandomWalk","ReactDOM","findDOMNode","InputLabelRef","offsetWidth","index_es","ref","htmlFor","handleFaultTypeSelection","input","marginLeft","marginRight","FormEdit","FormControlLabel_default","control","Switch_default","checkedSelection","handleCheckedSelection","lowBound","handleLowBound","uppBound","handleUppBound","components_SignalCreation_SignalCreation","flexDirection","content","flexGrow","overflow","Plot","createPlotlyComponent","Plotly","onRelayout","handleReLayout","data","y","mode","marker","symbol","layout","tag","config","displaylogo","showLink","modeBarButtonsToRemove","handleBackButton_fallback","window","history","back","handleOkButton","handleBackButton","confirmLabel","backLabel","wrapButtons","Button_default","button","justifyContent","EditFaults","eventdata","valLow","floor","valUpp","val","handleBackBut","handleTypeSelection","handleEdit","handleEditFaultWithBounds","params","parseInt","paper","wrapMain","PlotData_PlotData","EditFaults_FormEdit","Buttons_ConfirmBackButtons","wrapPaper","card","Card_default","noiseStd","handleNoiseAddition","numberPointsCreation","handleNumberPointsCreation","tagCreation","handleTagCreation","SignalCreation_NoiseForm","handleSignalCreation","home","container","ROOT_ROUTE","get_route","routeStr","_views","Route","path","Table_Table","Visualize_Visualize","onEnter","beforeExit","onParamsChange","route","components_EditFaults_EditFaults","CreateSeries_CreateSeries","Dashboard","openNested","fakeState","handleDrawerOpen","handleDrawerClose","handleNestedClick","showSnackBar","signal_generating_status","handleCloseSnackBar","SnackBarInformation","open_snack_bar","CssBaseline_default","AppBar_default","position","appBar","appBarShift","disableGutters","toolbar","menuButton","menuButtonHidden","Menu_default","noWrap","src","MyLogo","alt","mylogo","Drawer_default","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","Divider_default","List_default","ListItem_default","ListItemIcon_default","Dashboard_default","ListItemText_default","MoveToInbox_default","inset","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","nested","create","StarBorder_default","visualize","Assignment_default","mainListItems","appBarSpacer","dist","objectSpread","alignItems","mixins","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","enteringScreen","whiteSpace","overflowX","breakpoints","up","chartContainer","tableContainer","h5","marginBottom","paddingLeft","App","containers_Dashboard","Boolean","location","hostname","match","float_format","num","toExponential","toFixed","getHigherId","apply","toConsumableArray","UUIDgeneration","replace","c","r","random","toString","Array","prototype","subarray","i","j","self","arr","get","set","URL_SIGNAL_CREATION","randomArray","dataInitial","faultAdded","GBNStore","decorate","observable","RandomWalkStore","DataStore","_this3","classCallCheck","appendImportedSeries","currFaultConfig","importSeriesFromFile","dataLoaded","allText","allTextLines","split","headers","dataLines","matrixVals","lin","trim","lineData","console","log","_loop","idx","singleSerieVals","processData","currentTarget","result","last_id","dataMod","mod_v","handleAppendImportedSeries","forEach","idx_rm","findIndex","splice","bounds","signal","num_points","inputs","constantFault","afterCreationSnackBarUpdate","handleGBNCreation","raw","cbSignalCreatedToEditFault","handleRandomWalkCreation","faultCfg","validateNumberOfPoints","numPoints","createConstantSignal","addNoise","createNewSerieObject","push","cbSignalCreated","Number","isInteger","noiseStd_","o","u","sqrt","cos","PI","randn_bm","signalRaw","serieMod","apiRPCComm","method","resolve_cb","error_cb","url","axios","post","jsonrpc","then","response","catch","error","number_points","cb_resolved","cb_error","tspan","fill","type_serie","reason","autorun","author","handleEditBut","importDataFromFile","computed","observableDataStore","__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__","stores","RouterStore","startRouter","render","index_module","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b1afa61f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/android-chrome-512x512.32c02d83.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst styles = theme => ({\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n  progress: {\n    margin: theme.spacing.unit,\n  },\n  wraploadingmsg: {\n    display: 'flex',\n  }\n});\n\nclass ConsecutiveSnackbars extends React.Component {\n  queue = [];\n\n  state = {\n    open: false,\n    messageInfo: {},\n  };\n\n  // createMessageLoading = (message) => {\n  //   const func_clicked = this.handleClick(\n  //     <div className={this.classes.wraploadingmsg}>\n  //       <CircularProgress className={this.classes.progress} />\n  //       <p>{message}</p>\n  //     </div>\n  //   )\n  //   return func_clicked\n  // }\n\n  // handleClick = message => () => {\n  //   this.queue.push({\n  //     message,\n  //     key: new Date().getTime(),\n  //   });\n\n  //   if (this.state.open) {\n  //     // immediately begin dismissing current message\n  //     // to start showing new one\n  //     this.setState({ open: false });\n  //   } else {\n  //     this.processQueue();\n  //   }\n  // };\n\n  // processQueue = () => {\n  //   if (this.queue.length > 0) {\n  //     this.setState({\n  //       messageInfo: this.queue.shift(),\n  //       open: true,\n  //     });\n  //   }\n  // };\n\n  // handleExited = () => {\n  //   this.processQueue();\n  // };\n\n  createMessage = (loading, message) => {\n    let msg\n    if (loading) {\n      msg = (\n        <div className={this.classes.wraploadingmsg}>\n          <CircularProgress className={this.classes.progress} />\n          <p>{message}</p>\n        </div>\n      )\n    }\n    else\n      msg = message\n    return msg\n  }\n\n  render() {\n    const { classes } = this.props;\n    // const { messageInfo } = this.state;\n    const to_open = this.props.open\n    const message_prop = this.props.message\n    const handleClose = this.props.handleClose\n    const loading = this.props.loading\n    this.classes = classes\n\n    // const ff = this.createMessageLoading('Creating Series')\n    // ff()\n    const msg = this.createMessage(loading, message_prop)\n\n    return (\n      <div>\n        {/* {this.createMessageLoading('Creating!')} */}\n        {/* <Button onClick={this.createMessageLoading('Creating Series')}>Show message A</Button> */}\n        {/* <Button onClick={this.handleClick('message b')}>Show message B</Button> */}\n        <Snackbar\n          // key={messageInfo.key}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          open={to_open}\n          autoHideDuration={2000}\n          onClose={handleClose}\n          onExited={this.handleExited}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{msg}</span>}\n          action={[\n            // <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleClose}>\n            //   UNDO\n            // </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              className={classes.close}\n              onClick={handleClose}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nConsecutiveSnackbars.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ConsecutiveSnackbars)\n// const injectedObserved = inject(\"store\")(observer(ConsecutiveSnackbars))\n// export default withStyles(styles)(injectedObserved)\n","import React from 'react'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\nimport { lighten } from '@material-ui/core/styles/colorManipulator'\n\nconst toolbarStyles = theme => ({\n  root: {\n    paddingRight: theme.spacing.unit,\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark,\n      },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  actions: {\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n})\n\nlet EnhancedTableToolbar = props => {\n  const { selected, classes } = props\n  const handleDeleteClick = props.handleDeleteClick\n  return (\n    <Toolbar\n      className={classNames(classes.root, {\n        [classes.highlight]: selected.length > 0,\n      })}\n    >\n      <div className={classes.title}>\n        {selected.length > 0 ? (\n          <Typography color=\"inherit\" variant=\"subtitle1\">\n            {selected.length} selected\n          </Typography>\n        ) : (\n            <Typography variant=\"h6\" id=\"tableTitle\">\n              Data Series\n          </Typography>\n          )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {selected.length > 0 ? (\n          <Tooltip title=\"Delete\">\n            <IconButton aria-label=\"Delete\" onClick={(e) => handleDeleteClick(selected, props.store)}>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n            <Tooltip title=\"Filter list\">\n              <IconButton aria-label=\"Filter list\">\n                <FilterListIcon />\n              </IconButton>\n            </Tooltip>\n          )}\n      </div>\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  selected: PropTypes.array.isRequired,\n}\n\nconst styled = withStyles(toolbarStyles)(EnhancedTableToolbar)\n// export default inject(\"store\")(observer(styled))\nexport default styled\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { observer, inject } from 'mobx-react'\n\nconst rows = [\n  { id: 'tag', numeric: false, disablePadding: true, label: 'TAG' },\n  { id: 'custom', numeric: false, disablePadding: true, label: 'Customize' },\n  { id: 'faults', numeric: false, disablePadding: true, label: 'Fault Edited' },\n  { id: 'download', numeric: false, disablePadding: true, label: 'Download' },\n  { id: 'min', numeric: false, disablePadding: true, label: 'Min.' },\n  { id: 'max', numeric: false, disablePadding: true, label: 'Max.' },\n  { id: 'size', numeric: false, disablePadding: true, label: 'Size' },\n]\n\nclass EnhancedTableHead extends React.Component {\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property)\n  }\n\n  render() {\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount } = this.props\n\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={numSelected === rowCount}\n              onChange={onSelectAllClick}\n            />\n          </TableCell>\n          {rows.map(row => {\n            return (\n              <TableCell\n                key={row.id}\n                // align={row.numeric}\n                // padding={row.disablePadding ? 'none' : 'default'}\n                sortDirection={orderBy === row.id ? order : false}\n              >\n                <Tooltip\n                  title=\"Sort\"\n                  // placement={row.numeric ? 'bottom-end' : 'bottom-start'}\n                  enterDelay={300}\n                >\n                  <TableSortLabel\n                    active={orderBy === row.id}\n                    direction={order}\n                    onClick={this.createSortHandler(row.id)}\n                  >\n                    {row.label}\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n            )\n          }, this)}\n        </TableRow>\n      </TableHead>\n    )\n  }\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n}\n\n// const styled = withStyles(styles)(EnhancedTableHead)\nexport default inject(\"store\")(observer(EnhancedTableHead))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport EditIcon from '@material-ui/icons/EditOutlined'\nimport Download from '@material-ui/icons/GetAppOutlined'\nimport { observer, inject } from 'mobx-react'\nimport views from '../../config/views'\nimport EnhancedTableToolbar from './TableToolbar'\nimport EnhancedTableHead from './TableHeader'\nimport download from 'downloadjs'\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index])\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0])\n    if (order !== 0) return order\n    return a[1] - b[1]\n  })\n  return stabilizedThis.map(el => el[0])\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy)\n}\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n  },\n  table: {\n    minWidth: 1020,\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n  },\n})\n\nclass EnhancedTable extends React.Component {\n  state = {\n    order: 'asc',\n    orderBy: 'calories',\n    selected: [],\n    page: 0,\n    rowsPerPage: 5,\n  }\n\n  handleDeleteClick = (selected, storeGlobal) => {\n    const store = this.props.store.store\n    // const { store } = storeGlobal\n    store.handleDeleteTableClick(selected)\n    this.setState({ selected: [] })\n  }\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property\n    let order = 'desc'\n\n    if (this.state.orderBy === property && this.state.order === 'desc') {\n      order = 'asc'\n    }\n\n    this.setState({ order, orderBy })\n  }\n\n  handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const dataTable = this.props.store.store.formattedTableData\n      this.setState(state => ({ selected: dataTable.map(n => n.id) }))\n      return\n    }\n    this.setState({ selected: [] })\n  }\n\n  handleClick = (event, id) => {\n    const { selected } = this.state\n    const selectedIndex = selected.indexOf(id)\n    let newSelected = []\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id)\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1))\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1))\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      )\n    }\n\n    this.setState({ selected: newSelected })\n  }\n\n  handleChangePage = (event, page) => {\n    this.setState({ page })\n  }\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value })\n  }\n\n  isSelected = id => this.state.selected.indexOf(id) !== -1\n\n  handleDownload = (event, id) => {\n    // router.goTo(views.series, { id: n.id }, store)\n    const serie = this.series.filter(v => v.id === id)[0]\n    download(serie.values, \"data.csv\", \"text/plain\");\n  }\n\n  render() {\n    const router = this.props.store.router\n    const store = this.props.store.store\n    const series = store.series\n    const { classes } = this.props\n    const { order, orderBy, selected, rowsPerPage, page } = this.state\n    const dataTable = store.formattedTableData\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, dataTable.length - page * rowsPerPage)\n    this.series = series\n\n    return (\n      <Paper className={classes.root}>\n        <EnhancedTableToolbar selected={selected} handleDeleteClick={this.handleDeleteClick}/>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={this.handleSelectAllClick}\n              onRequestSort={this.handleRequestSort}\n              rowCount={series.length}\n            />\n            <TableBody>\n              {stableSort(dataTable, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map(n => {\n                  const isSelected = this.isSelected(n.id)\n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      aria-checked={isSelected}\n                      tabIndex={-1}\n                      key={n.id}\n                      selected={isSelected}\n                    >\n                      <TableCell padding=\"checkbox\"\n                        onClick={event => this.handleClick(event, n.id)}>\n                        <Checkbox checked={isSelected} />\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        {n.name}\n                      </TableCell>\n                      <TableCell onClick={() => router.goTo(views.series, { id: n.id }, store)} >\n                        <IconButton aria-label=\"Edit\">\n                          <EditIcon />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell >\n                        {n.fault ? 'Yes': 'No'}\n                      </TableCell>\n                      <TableCell onClick={(event) => this.handleDownload(event, n.id)} >\n                        <IconButton aria-label=\"Download\">\n                          <Download />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell>{n.min}</TableCell>\n                      <TableCell>{n.max}</TableCell>\n                      <TableCell>{n.size}</TableCell>\n                    </TableRow>\n                  )\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 49 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={dataTable.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'Previous Page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'Next Page',\n          }}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n        {/* <h3>{this.props.store.store.seriesCount}</h3> */}\n      </Paper>\n    )\n  }\n}\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nconst styled = withStyles(styles)(EnhancedTable)\nexport default inject(\"store\")(observer(styled))\n\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles'\nimport { observer, inject } from 'mobx-react'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flexFlow: 'column',\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  textField: {\n    flexBasis: 200,\n    margin: theme.spacing.unit,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  },\n})\n\nclass ConstantFault extends React.Component {\n\n  handleFaultConfig = (e) => {\n    const valConstant = e.target.value\n    const faultConfig = { value: parseFloat(valConstant) }\n    this.dataStore.handleFaultConfig(faultConfig)\n  }\n\n\n  render() {\n    const { classes }= this.props\n    this.dataStore = this.props.store.store\n\n    return (\n      <form className={\"\"}>\n        <TextField\n          id=\"outlined-number\"\n          label=\"Value\"\n          value={this.dataStore.faultConfig.value}\n          onChange={this.handleFaultConfig}\n          type=\"number\"\n          className={classes.textField}\n          // margin=\"normal\"\n          variant=\"outlined\"\n        />\n      </form>\n    )\n  }\n}\n\nconst injectedObserved = inject(\"store\")(observer(ConstantFault))\nexport default withStyles(styles)(injectedObserved)\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles'\nimport { observer, inject } from 'mobx-react'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flexFlow: 'column',\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  textField: {\n    flexBasis: 200,\n    margin: theme.spacing.unit,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  },\n})\n\nclass RandomGBN extends React.Component {\n\n  // handleFaultConfig = (e) => {\n  //   let val\n  //   if (e.target.name === 'min_constant'){\n  //     val = parseInt(e.target.value)\n  //   }\n  //   else {\n  //     val = parseFloat(e.target.value)\n  //   }\n  //   let faultConfig = {...this.dataStore.faultConfig}\n  //   // this.dataStore.faultStores.gbn\n  //   faultConfig[e.target.name] = val\n  //   // this.dataStore.handleFaultConfig(faultConfig)\n  // }\n\n\n  render() {\n    const { classes } = this.props\n    this.dataStore = this.props.store.store\n\n    return (\n      <form className={\"\"}>\n        <TextField\n          label=\"Lower Value\"\n          value={this.dataStore.faultStores.gbn.low_value}\n          onChange={this.dataStore.faultStores.gbn.handleModifyValue}\n          type=\"number\"\n          className={classes.textField}\n          // margin=\"normal\"\n          variant=\"outlined\"\n          name=\"low_value\"\n        />\n        <TextField\n          label=\"Upper Value\"\n          value={this.dataStore.faultStores.gbn.upp_value}\n          onChange={this.dataStore.faultStores.gbn.handleModifyValue}\n          type=\"number\"\n          className={classes.textField}\n          // margin=\"normal\"\n          variant=\"outlined\"\n          name=\"upp_value\"\n        />\n        <TextField\n          label=\"Probability change\"\n          value={this.dataStore.faultStores.gbn.prob_change}\n          onChange={this.dataStore.faultStores.gbn.handleModifyValue}\n          type=\"number\"\n          className={classes.textField}\n          // margin=\"normal\"\n          variant=\"outlined\"\n          name=\"prob_change\"\n        />\n        <TextField\n          label=\"Min. constant\"\n          value={this.dataStore.faultStores.gbn.min_constant}\n          onChange={this.dataStore.faultStores.gbn.handleModifyValue}\n          type=\"number\"\n          className={classes.textField}\n          // margin=\"normal\"\n          variant=\"outlined\"\n          name=\"min_constant\"\n        />\n      </form>\n    )\n  }\n}\n\nconst injectedObserved = inject(\"store\")(observer(RandomGBN))\nexport default withStyles(styles)(injectedObserved)\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles'\nimport { observer, inject } from 'mobx-react'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flexFlow: 'column',\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  textField: {\n    flexBasis: 200,\n    margin: theme.spacing.unit,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  },\n})\n\nclass RandomWalk extends React.Component {\n\n\n  render() {\n    const { classes } = this.props\n    this.dataStore = this.props.store.store\n\n    return (\n      <form className={\"\"}>\n        <TextField\n          label=\"Starting Value\"\n          value={this.dataStore.faultStores.randomWalk.start_val}\n          onChange={this.dataStore.faultStores.randomWalk.handleModifyValue}\n          type=\"number\"\n          className={classes.textField}\n          // margin=\"normal\"\n          variant=\"outlined\"\n          name=\"start_val\"\n        />\n        <TextField\n          label=\"Probability Down\"\n          value={this.dataStore.faultStores.randomWalk.prob_down}\n          onChange={this.dataStore.faultStores.randomWalk.handleModifyValue}\n          type=\"number\"\n          className={classes.textField}\n          // margin=\"normal\"\n          variant=\"outlined\"\n          name=\"prob_down\"\n        />\n        <TextField\n          label=\"Probability Up\"\n          value={this.dataStore.faultStores.randomWalk.prob_up}\n          onChange={this.dataStore.faultStores.randomWalk.handleModifyValue}\n          type=\"number\"\n          className={classes.textField}\n          // margin=\"normal\"\n          variant=\"outlined\"\n          name=\"prob_up\"\n        />\n        <TextField\n          label=\"Amplitude\"\n          value={this.dataStore.faultStores.randomWalk.amplitude}\n          onChange={this.dataStore.faultStores.randomWalk.handleModifyValue}\n          type=\"number\"\n          className={classes.textField}\n          // margin=\"normal\"\n          variant=\"outlined\"\n          name=\"amplitude\"\n        />\n      </form>\n    )\n  }\n}\n\nconst injectedObserved = inject(\"store\")(observer(RandomWalk))\nexport default withStyles(styles)(injectedObserved)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { FormControl, InputLabel, Select, OutlinedInput, MenuItem, withStyles } from '@material-ui/core';\nimport ConstantFault from './ConstantFault'\nimport RandomGBN from './RandomGBN'\nimport RandomWalk from './RandomWalk'\nimport { observer, inject } from 'mobx-react'\n\n\nconst styles = theme => ({\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  textField: {\n    flexBasis: 200,\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 300,\n  },\n})\n\n\nconst faultTypesSelections = [\n  { value: 'constant', label: 'Constant' },\n  { value: 'gbn', label: 'GBN' },\n  { value: 'randomwalk', label: 'Random Walk' },\n  { value: 'ramp', label: 'Ramp (to do)' },\n  { value: 'senoidal', label: 'Senoidal (to do)' },\n]\n\n\nclass SignalCreation extends React.Component {\n\n  state = {\n    labelWidth: 0,\n    age: '',\n    // faultType: 'constant',\n  };\n\n  handleChange = event => {\n    this.setState({ age: event.target.value });\n  };\n\n  componentDidMount() {\n    this.setState({\n      labelWidth: ReactDOM.findDOMNode(this.InputLabelRef).offsetWidth,\n    });\n  }\n\n  // handleFaultConfig = (event) => {\n  //   const faultConfig = { ...this.state.faultConfig }\n  //   faultConfig.value = event.target.value\n  //   console.log(this.state.faultConfig.value)\n  //   this.setState({ faultConfig })\n  // }\n\n  addFormAfterTypeSelection = () => {\n    switch (this.dataStore.faultType.toLowerCase()) {\n      case 'constant':\n        return (\n          <ConstantFault\n            >\n          </ConstantFault>)\n      case 'gbn':\n        return (\n          <RandomGBN\n          >\n          </RandomGBN>)\n      case 'randomwalk':\n        return (\n          <RandomWalk\n          >\n          </RandomWalk>)\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n    this.dataStore = this.props.store.store\n\n    return (\n      <div>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel\n            ref={ref => {\n              this.InputLabelRef = ref;\n            }}\n            htmlFor=\"outlined-age-simple\"\n          >\n            Fault Type\n          </InputLabel>\n          <Select\n            value={this.dataStore.faultType}\n            onChange={this.dataStore.handleFaultTypeSelection}\n            input={\n              <OutlinedInput\n                labelWidth={this.state.labelWidth}\n                name=\"falttype\"\n                id=\"outlined-age-simple\"\n              />\n            }\n          >\n            {faultTypesSelections.map(v => {\n              return (\n                <MenuItem value={v.value}\n                  key={v.value}>\n                  {v.label}\n                </MenuItem>\n              )\n            })}\n          </Select>\n        </FormControl>\n        {this.addFormAfterTypeSelection()}\n      </div>\n    )\n  }\n}\n\n\nconst injectedObserved = inject(\"store\")(observer(SignalCreation))\nexport default withStyles(styles)(injectedObserved)\n","import React, { Component } from 'react'\n// import ReactDOM from 'react-dom';\n// import classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n// import InputAdornment from '@material-ui/core/InputAdornment';\n// import FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import OutlinedInput from '@material-ui/core/OutlinedInput';\n// import Select from '@material-ui/core/Select';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import FormControl from '@material-ui/core/FormControl';\n// import ConstantFault from '../CreateSeries/ConstantFault';\nimport SignalCreation from '../SignalCreation/SignalCreation';\nimport { observer, inject } from 'mobx-react'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flexDirection: 'column',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  textField: {\n    flexBasis: 200,\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  },\n})\n\n// const faultTypesSelections = [\n//   { value: 'constant', label: 'Constant' },\n//   { value: 'random', label: 'Random' },\n//   { value: 'arima', label: 'ARIMA' },\n//   { value: 'ramp', label: 'Ramp' },\n//   { value: 'senoidal', label: 'Senoidal' },\n// ]\n\nclass FormEdit extends Component {\n  // const classes = props.classes\n\n  // handleTypeSelection = (event) => {\n  //   console.log(event);\n  //   this.setState({ faultType: event.target.value });\n\n  // }\n\n  render() {\n    const props = this.props\n    const classes = props.classes\n    return (\n      <div className={classes.root}>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={props.checkedSelection}\n              onChange={props.handleCheckedSelection}\n              // value=\"checkedB\"\n              color=\"primary\"\n            />\n          }\n          label=\"Select Region in Chart to Add Fault\"\n        />\n\n        <div>\n          <TextField\n            id=\"outlined-helperText\"\n            label=\"Lower Bound\"\n            // defaultValue=\"\"\n            className={classes.textField}\n            // helperText=\"Corresponding t\"\n            value={props.lowBound}\n            onChange={props.handleLowBound}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"outlined-helperText\"\n            label=\"Upper Bound\"\n            // defaultValue=\"\"\n            value={props.uppBound}\n            onChange={props.handleUppBound}\n            className={classes.textField}\n            // helperText=\"Corresponding t\"\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n        </div>\n        <SignalCreation />\n      </div>\n    )\n  }\n}\n\n// export default inject(\"store\")(\n//   observer(\n//     withStyles(styles)(FormEdit)\n//   )\n// )\n\nconst injectedObserved = inject(\"store\")(observer(FormEdit))\nexport default withStyles(styles)(injectedObserved)\n","import React from 'react'\nimport Plotly from 'plotly.js-basic-dist'\n// import Plot from 'react-plotly.js'\nimport createPlotlyComponent from 'react-plotly.js/factory'\nimport { observer, inject } from 'mobx-react'\n\nconst Plot = createPlotlyComponent(Plotly)\n\nfunction PlotData(props) {\n  return (\n    <Plot\n      onRelayout={props.handleReLayout}\n      data={[\n        {\n          // x: [1, 2, 3],\n          y: props.serie.values,\n          type: 'scatter',\n          mode: 'lines+markers',\n          marker: { color: 'black', symbol: 'circle-open', size: 12 },\n        },\n      ]}\n      layout={{\n        width: 700,\n        title: props.serie.tag\n      }}\n      config={{ displaylogo: false, showLink: false,\n        modeBarButtonsToRemove: ['sendDataToCloud'] }}\n    />\n  )\n}\n\n// export default inject([\"store\"])(observer(PlotData))\n\nconst injectedObserved = inject(\"store\")(observer(PlotData))\nexport default injectedObserved //withStyles(styles)(injectedObserved)\n","\n\nimport React from 'react'\nimport { withStyles } from '@material-ui/core'\nimport { observer, inject } from 'mobx-react'\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n\n  wrapButtons: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    // flexWrap: 'wrap',\n  },\n  button: {\n    width: 100,\n  },\n})\n\nconst handleBackButton_fallback = (event) => {\n  window.history.back()\n}\n\nfunction ConfirmBackButtons(props) {\n  const { classes } = props\n  const handleOkButton = props.handleOkButton\n  const handleBackButton = props.handleBackButton ? props.handleBackButton : handleBackButton_fallback\n  const confirmLabel = props.confirmLabel ? props.confirmLabel : 'Ok'\n  const backLabel = props.backLabel ? props.backLabel : 'Back'\n  return (\n      <div className={classes.wrapButtons}>\n        <Button\n          variant=\"contained\" color=\"primary\" className={classes.button}\n          onClick={handleOkButton}>\n        {confirmLabel}\n        </Button>\n        <Button\n          variant=\"contained\" color=\"secondary\" className={classes.button}\n        onClick={handleBackButton}>\n          {backLabel}\n        </Button>\n      </div>\n  )\n}\n\nconst injectedObserved = inject(\"store\")(observer(ConfirmBackButtons))\nexport default withStyles(styles)(injectedObserved)\n","import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles';\n// import Plot from 'react-plotly.js'\nimport { Paper } from '@material-ui/core';\nimport FormEdit from './FormEdit'\n// import Button from '@material-ui/core/Button';\nimport PlotData from '../PlotData/PlotData'\n// import { browserHistory } from 'react-router';\nimport { observer, inject } from 'mobx-react'\nimport ConfirmBackButtons from '../Buttons/ConfirmBackButtons';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  wrapPaper: {\n\n  },\n  paper: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  wrapMain: {\n    // display: 'flex',\n    // flexWrap: 'wrap',\n  },\n  wrapButtons: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    // flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  button: {\n    width: 100,\n  },\n  textField: {\n    flexBasis: 200,\n  },\n})\n\nclass EditFaults extends Component {\n\n  state = {\n    checkedSelection: true,\n    lowBound: 0,\n    uppBound: 0,\n    faultConfig: {\n      value: 0.0\n    },\n    faultType: 'constant',\n  }\n\n  handleReLayout = (eventdata) => {\n    // console.log(eventdata)\n    if ('xaxis.autorange' in eventdata && 'yaxis.autorange' in eventdata) {\n      return\n    }\n    if (this.state.checkedSelection) {\n      const valLow = Math.floor(eventdata['xaxis.range[0]'])\n      const valUpp = Math.floor(eventdata['xaxis.range[1]'])\n      // console.log(eventdata)\n      // console.log(eventdata['xaxis.range[0]'])\n      // console.log(this.state.lowBound)\n      this.setState({\n        lowBound: valLow,\n        uppBound: valUpp,\n      })\n    }\n  }\n\n  handleCheckedSelection = (event) => {\n    this.setState({ checkedSelection: event.target.checked })\n  }\n\n  handleLowBound = (event) => {\n    const val = event.target.value\n    this.setState({ lowBound: val })\n  }\n\n  handleUppBound = (event) => {\n    const val = event.target.value\n    this.setState(() => {\n      return { uppBound: val}\n    })\n  }\n\n  // handleFaultConfig = (event) => {\n  //   const faultConfig = { ...this.state.faultConfig }\n  //   faultConfig.value = event.target.value\n  //   console.log(this.state.faultConfig.value)\n  //   this.setState({ faultConfig })\n  // }\n\n  handleBackBut = (event) => {\n    // this.props.history.goBack()\n    window.history.back()\n  }\n\n  handleTypeSelection = (event) => {\n    // console.log(event);\n    this.setState({ faultType: event.target.value });\n  }\n\n  handleEdit = (e, id, store) => {\n    store.handleEditFaultWithBounds(id,\n      {lowBound: this.state.lowBound, uppBound: this.state.uppBound }\n    )\n  }\n\n  render() {\n    const store = this.props.store.store;\n    const router = this.props.store.router;\n    const params = router.params\n    const id = parseInt(params.id)\n    const serie = this.props.store.store.series.filter(v => v.id === id)[0]\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <Paper className={classes.paper}>\n          <div className={classes.wrapMain}>\n            <PlotData serie={serie} handleReLayout={this.handleReLayout} />\n            <FormEdit\n              checkedSelection={this.state.checkedSelection}\n              handleCheckedSelection={this.handleCheckedSelection}\n              lowBound={this.state.lowBound}\n              handleLowBound={this.handleLowBound}\n              uppBound={this.state.uppBound}\n              handleUppBound={this.handleUppBound}\n              // faultConfig={this.state.faultConfig}\n              // handleFaultConfig={this.handleFaultConfig}\n              // faultType={this.state.faultType}\n              handleTypeSelection={this.handleTypeSelection}\n            >\n            </FormEdit>\n          </div>\n          <ConfirmBackButtons\n            handleOkButton={(e) => this.handleEdit(e, id, store)}\n            confirmLabel='Edit'\n            handleBackButton={this.handleBackBut}\n          />\n        </Paper>\n\n      </div>\n    );\n  }\n}\n\n// const styled = withStyles(styles)(EditFaults)\n// export default inject([\"store\"])(observer(styled))\n\nconst injectedObserved = inject(\"store\")(observer(EditFaults))\nexport default withStyles(styles)(injectedObserved)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport Card from '@material-ui/core/Card';\nimport Paper from '@material-ui/core/Card';\nimport PlotData from '../PlotData/PlotData'\nimport { observer, inject } from 'mobx-react'\n// import {toJS} from 'mobx'\n\nconst styles = theme => ({\n  root: {\n    paddingRight: theme.spacing.unit,\n  },\n  paper: {\n    display: 'flex',\n    // 'align-items': 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing.unit * 3,\n    height: '90vh',\n    overflow: 'auto',\n  },\n  card: {\n    flexBasis: 800,\n    margin: theme.spacing.unit * 2,\n  }\n})\n\nfunction Visualize(props) {\n  const { classes } = props\n  const series = props.store.store.series\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        {series.map((v) => {\n          return (\n            <Card className={classes.card}\n              key={v.id}>\n             <PlotData serie={v}/>\n            </Card>\n          )\n        })}\n      </Paper>\n    </div>\n  )\n}\n\n// export default withStyles(styles)(Visualize)\nconst styled = withStyles(styles)(Visualize)\nexport default inject(\"store\")(observer(styled))\n","\n\nimport React from 'react'\nimport { TextField, withStyles } from '@material-ui/core'\nimport { observer, inject } from 'mobx-react'\n\nconst styles = theme => ({\n  input: {\n    margin: theme.spacing.unit,\n  },\n  textField: {\n    flexBasis: 200,\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n});\n\nfunction NoiseForm(props) {\n  const { classes } = props\n  const dataStore = props.store.store\n  return (\n    <div className={\"\"}>\n      <TextField\n        label=\"Noise Standard Deviation\"\n        // defaultValue=\"\"\n        className={classes.textField}\n        // helperText=\"Corresponding t\"\n        // type=\"number\"\n        value={dataStore.noiseStd}\n        onChange={dataStore.handleNoiseAddition}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n    </div>\n  )\n}\n\nconst injectedObserved = inject(\"store\")(observer(NoiseForm))\nexport default withStyles(styles)(injectedObserved)\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// import Input from '@material-ui/core/Input';\nimport { Paper, TextField } from '@material-ui/core';\nimport SignalCreation from '../SignalCreation/SignalCreation'\nimport ConfirmBackButtons from '../Buttons/ConfirmBackButtons'\nimport NoiseForm from '../SignalCreation/NoiseForm'\nimport { observer, inject } from 'mobx-react'\nimport views from '../../config/views'\n\nconst styles = theme => ({\n  root: {\n    padding: theme.spacing.unit*2,\n  },\n  paper: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  input: {\n    margin: theme.spacing.unit,\n  },\n  textField: {\n    flexBasis: 200,\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n});\n\n\nfunction CreateSeries(props) {\n  const { classes } = props;\n  // const classes = {}\n  const router = props.store.router\n  const dataStore = props.store.store\n  return (\n    <Paper className={classes.paper}>\n      <Typography variant=\"h6\" id=\"createTitle\">\n        Create a new Signal\n      </Typography>\n      <TextField\n        label=\"Number of Points\"\n        // defaultValue=\"\"\n        className={classes.textField}\n        // helperText=\"Corresponding t\"\n        type=\"number\"\n        value={dataStore.numberPointsCreation}\n        onChange={dataStore.handleNumberPointsCreation}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        label=\"Tag\"\n        // defaultValue=\"\"\n        className={classes.textField}\n        // helperText=\"Corresponding t\"\n        // type=\"number\"\n        value={dataStore.tagCreation}\n        onChange={dataStore.handleTagCreation}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <SignalCreation></SignalCreation>\n      <NoiseForm></NoiseForm>\n      <ConfirmBackButtons\n        handleOkButton={dataStore.handleSignalCreation}\n        confirmLabel='Create'\n        handleBackButton={(e) => { router.goTo(views.home)}}\n      />\n    </Paper>\n  );\n}\n\nCreateSeries.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst injectedObserved = inject(\"store\")(observer(CreateSeries))\nexport default withStyles(styles)(injectedObserved)\n","import React from 'react';\n\n//models\nimport { Route } from 'mobx-router';\n\n//components\nimport Table from '../components/Table/Table';\nimport EditFaults from '../components/EditFaults/EditFaults';\n// import Document from 'components/Document';\n// import Gallery from 'components/Gallery';\n// import Book from 'components/Book';\nimport Visualize from '../components/Visualize/Visualize';\n// import Import from \"../components/Import/Import\";\nimport CreateSeries from \"../components/CreateSeries/CreateSeries\";\n// import TesteUpload from \"../components/Import/TesteUpload\";\n// import SendToServerExample from \"../components/Import/SendToServerExample\";\n\nconst ROOT_ROUTE = '/fault-fake'\n\nfunction get_route(routeStr) {\n  return ROOT_ROUTE + routeStr\n}\n\nconst views = {\n  home: new Route({\n    path: get_route(''),\n    component: <Table />\n  }),\n  home: new Route({\n    path: get_route('/'),\n    component: <Table />\n  }),  \n  visualize: new Route({\n    path: get_route('/visualize'),\n    component: <Visualize />,\n    onEnter: () => {\n      // console.log('entering user profile!');\n    },\n    beforeExit: () => {\n      // console.log('exiting user profile!');\n    },\n    onParamsChange: (route, params, store) => {\n      // console.log('params changed to', params);\n    }\n  }),\n  series: new Route({\n    path: get_route('/series/:id'),\n    component: <EditFaults />,\n    onEnter: (route, params) => {\n      // console.log(`entering EditFaults with params`, params);\n    }\n  }),\n  // import: new Route({\n  //   path: get_route('import'),\n  //   component: <Import />,\n  // }),\n  create: new Route({\n    path: get_route('/create'),\n    component: <CreateSeries />,\n  }),\n};\nexport default views;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { withStyles } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Drawer from '@material-ui/core/Drawer'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport List from '@material-ui/core/List'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport Badge from '@material-ui/core/Badge'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\n// import NotificationsIcon from '@material-ui/icons/Notifications'\nimport SnackBarInformation from '../components/SnackBarInformation/SnackBarInformation'\n// import CircularProgress from '@material-ui/core/CircularProgress'\nimport MyLogo from '../assets/android-chrome-512x512.png'\n// import Button from '@material-ui/core/Button';\n\nimport { mainListItems } from './listitems'\n// import SimpleLineChart from '../components/SimpleLineChart/SimpleLineChart'\n// import Table from '../components/Table/Table'\n// import LoadSeries from '../components/LoadSeries/LoadSeries'\n// import CreateSeries from '../components/CreateSeries/CreateSeries'\n// import { Route, Switch } from \"react-router-dom\"\n// import { Route, Switch, withRouter } from \"react-router\"\n// import EditFaults from '../components/EditFaults/EditFaults'\n// import Visualize from '../components/Visualize/Visualize'\n// import Import from '../components/Import/SendToServerExample'\nimport { observer, inject } from 'mobx-react'\nimport { MobxRouter } from 'mobx-router'\n// import { CircularProgress } from 'material-ui';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9,\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  chartContainer: {\n    marginLeft: -22,\n  },\n  tableContainer: {\n    height: 320,\n  },\n  h5: {\n    marginBottom: theme.spacing.unit * 2,\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4,\n  },\n  mylogo: {\n    width: '80px',\n  }\n});\n\nclass Dashboard extends React.Component {\n  // queue = [];\n\n  state = {\n    open: true,\n    openNested: false,\n    fakeState: false,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  }\n\n  handleNestedClick = () => {\n    this.setState(state => ({ openNested: !state.openNested }));\n  }\n\n  showSnackBar = (signal_generating_status, handleCloseSnackBar) => {\n    return (< SnackBarInformation\n      open={signal_generating_status.open_snack_bar}\n      message={signal_generating_status.message}\n      handleClose={handleCloseSnackBar}\n      loading={signal_generating_status.loading}\n      >\n      </SnackBarInformation >)\n  }\n\n  render() {\n    const { classes } = this.props\n    const { signal_generating_status } = this.props.store.store\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"absolute\"\n          className={classNames(classes.appBar, this.state.open && classes.appBarShift)}\n        >\n          <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={classNames(\n                classes.menuButton,\n                this.state.open && classes.menuButtonHidden,\n              )}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.title}\n            >\n              Fake Fault Builder\n            </Typography>\n            {/* <IconButton color=\"inherit\"> */}\n              {/* <Badge badgeContent={4} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge> */}\n              <img src={MyLogo} alt=\"Logo\" className={classes.mylogo}/>\n            {/* </IconButton> */}\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\n          }}\n          open={this.state.open}\n        >\n          <div className={classes.toolbarIcon}>\n            <IconButton onClick={this.handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>{mainListItems(classes, this.handleNestedClick, this.state.openNested, this.props.store.router)}</List>\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n\n          <MobxRouter />\n\n          {/* {this.showSnackBar(is_generating_serie)} */}\n\n          {/* <Button onClick={this.createMessageLoading('Creating Series')}>Show message A</Button> */}\n          {/* <Button onClick={this.createMessageLoading('Creating Series')}>Test</Button> */}\n\n          {this.showSnackBar(signal_generating_status, this.props.store.store.handleCloseSnackBar)}\n\n        </main>\n\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n// const styled = withStyles(styles)(Dashboard);\n// const mobxed = inject(\"store\")(observer(styled))\n// export default mobxed\n\nconst injectedObserved = inject(\"store\")(observer(Dashboard))\nexport default withStyles(styles)(injectedObserved)\n\n// export default mobxed\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n// import ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\n// import BarChartIcon from '@material-ui/icons/BarChart';\n// import LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport Collapse from '@material-ui/core/Collapse';\nimport List from '@material-ui/core/List';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\n// import { Link } from \"react-router-dom\"\nimport views from '../config/views'\n\nexport const mainListItems = (classes, handleNestedClick, openNested, router) => {\n  return (\n    <div>\n      {/* <button onClick={() => push('/data')}></button> */}\n\n      <ListItem  button onClick={() => router.goTo(views.home)}>\n        <ListItemIcon>\n          <DashboardIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Data Series\" />\n      </ListItem>\n      {/* <ListItem  to=\"/create\" button>\n      <ListItemIcon>\n        <LayersIcon />\n      </ListItemIcon> */}\n      {/* <ListItemText primary=\"Create/Load Series\" /> */}\n      {/* </ListItem> */}\n      <ListItem button onClick={handleNestedClick}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText inset primary=\"New Series\" />\n        {openNested ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={openNested} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          <ListItem button className={classes.nested}\n            onClick={() => router.goTo(views.create)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText inset primary=\"Generate\" />\n          </ListItem>\n          {/* <ListItem button className={classes.nested}\n            onClick={() => router.goTo(views.import)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText inset primary=\"Import\" />\n          </ListItem> */}\n        </List>\n      </Collapse>\n      <ListItem button onClick={() => router.goTo(views.visualize)}>\n        <ListItemIcon>\n          <AssignmentIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Visualize All\" />\n      </ListItem>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport Dashboard from './containers/Dashboard'\n// import loadData from './data-provider/data-provider';\nimport { observer, inject } from 'mobx-react'\n// import { constantFault } from './utils/utils'\n\n\nclass App extends Component {\n\n  render() {\n    // const series = this.props.store.series\n    return (\n      <Dashboard\n      ></Dashboard>\n    )\n  }\n}\n\nexport default inject(\"store\")(observer(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\n  //--------------------\n  // Fault Edition\n  //--------------------\nfunction constantFault(inputs) {\n  const { serie, faultConfig, bounds } = inputs\n  const value = faultConfig.value\n  // const serieMod = [...serie]\n  // serieMod[bounds.lowBound]\n  // console.log(bounds, value)\n  const serieMod = serie.values.map((v, i) => {\n    return (i >= bounds.lowBound && i <= bounds.uppBound) ?\n      value : v\n  })\n  return serieMod\n}\n\n//--------------------\n// Signal Creation\n//--------------------\nfunction createConstantSignal(inputs) {\n  const { faultConfig, numPoints } = inputs\n  const value = faultConfig.value\n  const signal = Array(numPoints)\n  for (let index = 0; index < signal.length; index++) {\n    signal[index] = value;\n  }\n  return signal\n}\n\n\n\n\n\n\n\n//--------------------\n// Series Import\n//--------------------\nfunction processData(allText) {\n  var allTextLines = allText.split(/\\r\\n|\\n/)\n  var headers = allTextLines[0].split(',')\n  let dataLines = allTextLines.slice(1)\n  const series = Array(headers.length)\n\n  dataLines = dataLines.filter(function (lin) {\n    return lin.trim() !== ''\n  })\n\n  const matrixVals = dataLines.map(function (lin) {\n    let lineData = lin.split(',')\n    if (lineData.length === headers.length) {\n      lineData = lineData.map(function (v) {\n        return parseFloat(v)\n      })\n    }\n    else {\n      console.log('Error, data format not supported')\n      return -1\n    }\n    return lineData\n  })\n\n  for (let idx = 0; idx < series.length; idx++) {\n    const singleSerieVals = matrixVals.map(function (v) {\n      return v[idx]\n    })\n    series[idx] = {\n      tag: headers[idx],\n      values: singleSerieVals,\n      id: idx,\n      faultAdded: false,\n    }\n  }\n  return series\n}\n\n//--------------------\n// Table\n//--------------------\nfunction float_format(num) {\n  return (num > 1e3 || (num !== 0 && num < 1e-3)) ? num.toExponential(4) : num.toFixed(4)\n}\nfunction computeTableData(data) {\n  return {\n    id: data.id,\n    name: data.tag,\n    fault: data.faultAdded,\n    min: float_format(Math.min(...data.values)),\n    max: float_format(Math.max(...data.values)),\n    size: data.values.length,\n  }\n}\n\n\n//--------------------\n// Misc\n//--------------------\nfunction getHigherId(series) {\n  return Math.max(...series.map(v =>  v.id ))\n}\n\n// Standard Normal variate using Box-Muller transform.\nfunction randn_bm() {\n  var u = 0, v = 0;\n  while (u === 0) u = Math.random(); //Converting [0,1) to (0,1)\n  while (v === 0) v = Math.random();\n  return Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);\n}\n\nconst UUIDgeneration = function () {\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) { var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3) | 0x8; return v.toString(16); });\n}\n\n/* eslint no-extend-native: 0 */\n/* eslint no-loop-func: 0 */\n// FIX THOSE, FUNCTION IN THE LOOP IS WIERD\n\n// ref: https://stackoverflow.com/questions/24065411/javascript-subarray-without-copying\nArray.prototype.subarray = function (i, j) {\n  var self = this, arr = [];\n  for (var n = 0; i <= j; i++ , n++) {\n    (function (i) {\n      Object.defineProperty(arr, n, {       //Array is an Object\n        get: function () {\n          return self[i];\n        },\n        set: function (value) {\n          self[i] = value;\n          return value;\n        }\n      });\n    })(i);\n  }\n  return arr;\n}\n\nexport {\n  constantFault,\n  processData,\n  computeTableData,\n  float_format,\n  getHigherId,\n  createConstantSignal,\n  randn_bm,\n  UUIDgeneration,\n  // make_subarray\n}\n","// import { observer } from 'mobx-react';\nimport { observable, computed, decorate, autorun } from \"mobx\"\n// import mobx from \"mobx\"\nimport { constantFault, processData, computeTableData, getHigherId, createConstantSignal, randn_bm, UUIDgeneration } from \"../utils/utils\";\nimport { action } from \"mobx\"\nimport axios from 'axios';\n\nconst URL_SIGNAL_CREATION = 'https://us-central1-cm-signal-generator.cloudfunctions.net/signal_gen_http'\n// const URL_SIGNAL_CREATION = 'http://localhost:5000/api'\nconst LEN = 50\nconst randomArray = (length, max) => [...new Array(length)]\n  .map(() => (Math.random() * max));\n\nconst dataInitial = [\n  { tag: 'tag1', values: randomArray(LEN, 10.0), id: 1, faultAdded: false },\n  { tag: 'tag2', values: randomArray(LEN, 3.0), id: 2, faultAdded: false },\n  { tag: 'tag3', values: randomArray(LEN, 1.0), id: 3, faultAdded: false },\n]\n\nclass GBNStore {\n  low_value = -1\n  upp_value = 10\n  prob_change = 0.95\n  min_constant = 5\n\n  handleModifyValue = (e) => {\n    let val\n    if (e.target.name === 'min_constant') {\n      val = parseInt(e.target.value)\n    }\n    else {\n      val = parseFloat(e.target.value)\n    }\n    this[e.target.name] = val\n  }\n}\ndecorate(GBNStore, {\n  low_value: observable,\n  upp_value: observable,\n  prob_change: observable,\n  min_constant: observable,\n  handleModifyValue: action,\n})\n\nclass RandomWalkStore {\n  start_val = -1\n  prob_down = 0.2\n  prob_up = 0.7\n  amplitude = 5\n\n  handleModifyValue = (e) => {\n    const  val = parseFloat(e.target.value)\n    this[e.target.name] = val\n  }\n}\ndecorate(RandomWalkStore, {\n  start_val: observable,\n  prob_down: observable,\n  prob_up: observable,\n  amplitude: observable,\n  handleModifyValue: action,\n})\n\n// The idea was to add a small Store for each type of fault, such that its state can be represented accordingly\n// Thus, todo is to create a list of store, check if this is ok... they would be the possible ones\n// Also faultConfig would refer to it...\n\nclass DataStore {\n  series = dataInitial\n  appendImportedSeries = false\n  faultType = ''\n  faultConfig = { value: 0 }\n  numberPointsCreation = 50\n  tagCreation = ''\n  noiseStd = 0\n  currFaultConfig = {}\n  faultStores = {\n    gbn: new GBNStore(),\n    randomWalk: new RandomWalkStore()\n  }\n  signal_generating_status = {\n    open_snack_bar: false,\n    loading: false,\n    // created_successfully: false,\n    message: '',\n  }\n\n\n  constructor() {\n    autorun(() => console.log('AutoRun called'))\n  }\n\n  //--------------------\n  // Import Data\n  //--------------------\n  importSeriesFromFile = (e) => {\n    const content = e.currentTarget.result\n    const dataLoaded = processData(content)\n    if (this.appendImportedSeries) {\n      const last_id = this.series[this.series.length - 1].id\n      const dataMod = dataLoaded.map((v, idx) => {\n        let mod_v = v\n        mod_v.id = last_id + idx + 1\n        return mod_v\n      })\n      this.series = this.series.concat(dataMod)\n    }\n    else {\n      this.series = dataLoaded\n    }\n  }\n\n  handleAppendImportedSeries = (e) => {\n    this.appendImportedSeries = e.target.checked\n  }\n\n  //--------------------\n  // Table\n  //--------------------\n  get formattedTableData() {\n    return this.series.map((v) => computeTableData(v))\n  }\n  handleDeleteTableClick = (selected) => {\n    selected.forEach(el => {\n      const idx_rm = this.series.findIndex(v => v.id === el)\n      this.series.splice(idx_rm, 1)\n    })\n    // selected should be a observable\n  }\n\n  //--------------------\n  // Edit Form\n  //--------------------\n  handleEditFaultWithBounds = (id, bounds) => {\n    const index = this.series.findIndex(v => v.id === id)\n    const num_points = bounds.uppBound - bounds.lowBound + 1\n    let signal\n\n    // Create a snackbar\n    this.signal_generating_status.open_snack_bar = true\n    this.signal_generating_status.loading = true\n    this.signal_generating_status.message = 'Creating signal type: ' + this.faultType\n\n    switch (this.faultType) {\n      case 'constant':\n        signal = constantFault({\n          serie: this.series[index],\n          faultConfig: this.faultConfig,\n          bounds\n        })\n        this.series[index].values = signal\n        this.afterCreationSnackBarUpdate()\n        break;\n      case 'gbn':\n        this.handleGBNCreation(num_points, (raw) => this.cbSignalCreatedToEditFault(raw, index, bounds), console.log)\n        break\n      case 'randomwalk':\n        this.handleRandomWalkCreation(num_points, (raw) => this.cbSignalCreatedToEditFault(raw, index, bounds), console.log)\n        break\n      default:\n        break;\n    }\n    this.series[index].faultAdded = 'Yes'\n  }\n\n  //--------------------\n  // Fault Creation\n  //--------------------\n  handleFaultTypeSelection = (event) => {\n    this.faultType = event.target.value\n  }\n  handleFaultConfig = (faultCfg) => {\n    this.faultConfig = faultCfg\n  }\n  handleSignalCreation = () => {\n    let signal\n\n    this.validateNumberOfPoints()\n\n    // Create a snackbar\n    this.signal_generating_status.open_snack_bar = true\n    this.signal_generating_status.loading = true\n    this.signal_generating_status.message = 'Creating signal type: ' + this.faultType\n\n    switch (this.faultType.toLowerCase()) {\n      case 'constant':\n        signal = createConstantSignal({\n          faultConfig: this.faultConfig,\n          numPoints: this.numberPointsCreation\n        })\n        this.addNoise(signal)\n        const serie = this.createNewSerieObject(signal)\n        this.series.push(serie)\n        this.afterCreationSnackBarUpdate()\n        break;\n      case 'gbn':\n        signal = this.handleGBNCreation(this.numberPointsCreation, this.cbSignalCreated, console.log)\n        break\n      case 'randomwalk':\n        signal = this.handleRandomWalkCreation(this.numberPointsCreation, this.cbSignalCreated, console.log)\n        break\n      default:\n        break\n    }\n  }\n\n  validateNumberOfPoints = () => {\n    this.numberPointsCreation = parseInt(this.numberPointsCreation)\n    if (!Number.isInteger(this.numberPointsCreation)) {\n      this.numberPointsCreation = 50\n    }\n  }\n\n  addNoise = (signal) => {\n    const noiseStd_ = parseFloat(this.noiseStd)\n    if (noiseStd_ > 0) {\n      signal.forEach((o, i, a) =>\n        a[i] = a[i] + noiseStd_ * randn_bm()\n      )\n    }\n  }\n\n  createNewSerieObject = (signal) => {\n    if (this.tagCreation.trim() === '') {\n      this.tagCreation = `tag-${getHigherId(this.series) + 1}`\n    }\n    const serie = {\n      tag: this.tagCreation,\n      values: signal,\n      id: getHigherId(this.series) + 1,\n      faultAdded: false,\n    }\n\n    // Update tag name for possible next addition\n    this.tagCreation = `tag-${serie.id + 1}`\n\n    return serie\n  }\n\n  handleNumberPointsCreation = (e) => {\n    this.numberPointsCreation = e.target.value\n  }\n\n  handleTagCreation = (e) => {\n    this.tagCreation = e.target.value\n  }\n\n  handleNoiseAddition = (e) => {\n    this.noiseStd = e.target.value\n  }\n\n  // Fault Editing:\n\n  // Editing for GBN:\n  // editGBNSignal = (index, bounds) => {\n  //   const num_points = bounds.uppBound - bounds.lowBound + 1\n  //   this.handleGBNCreation(num_points, (raw) => this.cbSignalCreatedToEditFault(raw, index, bounds), console.log)\n  // }\n\n  cbSignalCreatedToEditFault = (signalRaw, index, bounds) => {\n    const signal = signalRaw.map(v => v[0])\n    const serie = this.series[index]\n    const serieMod = serie.values.map((v, i) => {\n      return (i >= bounds.lowBound && i <= bounds.uppBound) ?\n        signal[i - bounds.lowBound] : v\n    })\n    serie.faultAdded = 'Yes'\n    serie.values = serieMod\n    this.afterCreationSnackBarUpdate()\n  }\n\n\n\n\n  //--------------------\n  // Communication with Python\n  //--------------------\n  apiRPCComm = (method, params, resolve_cb, error_cb) => {\n    const url = URL_SIGNAL_CREATION //'http://localhost:5000/api'\n    axios.post(url, {\n      jsonrpc: \"2.0\",\n      method: method,\n      params: params,\n      id: UUIDgeneration(),\n    })\n      .then(function (response) {\n        resolve_cb(response.data)\n      })\n      .catch(function (error) {\n        error_cb(error)\n      })\n  }\n\n  handleGBNCreation = (number_points, cb_resolved, cb_error) => {\n    const tspan = Array(number_points).fill(0).map((v, i) => i)\n    const params_inner = {\n      low_value: [this.faultStores.gbn.low_value],\n      upp_value: [this.faultStores.gbn.upp_value],\n      prob_change: [this.faultStores.gbn.prob_change],\n      min_constant: [this.faultStores.gbn.min_constant],\n    }\n    const params = {\n       'tspan': tspan,\n       'type_serie': 'gbn',\n       'params': params_inner,\n    }\n    this.apiRPCComm('Signal.create_signal', params, cb_resolved, cb_error)\n  }\n\n  cbSignalCreated = (signalRaw) => {\n    const signal = signalRaw.map(v => v[0])\n    this.addNoise(signal)\n    const serie = this.createNewSerieObject(signal)\n    this.series.push(serie)\n    // this.is_generating_serie = false\n    // this.is_signal_created_successfully = true\n    this.afterCreationSnackBarUpdate();\n  }\n\n  handleRandomWalkCreation = (number_points, cb_resolved, cb_error) => {\n    const tspan = Array(number_points).fill(0).map((v, i) => i)\n    const params_inner = {\n      start_val: [this.faultStores.randomWalk.start_val],\n      prob_down: [this.faultStores.randomWalk.prob_down],\n      prob_up: [this.faultStores.randomWalk.prob_up],\n      amplitude: [this.faultStores.randomWalk.amplitude],\n    }\n    const params = {\n      'tspan': tspan,\n      'type_serie': 'random_walk',\n      'params': params_inner,\n    }\n    this.apiRPCComm('Signal.create_signal', params, cb_resolved, cb_error)\n    // this.apiRPCComm('Signal.create_signal', params, this.cbSignalCreated, console.log)\n  }\n\n  //--------------------------------------------\n  //\tSnackbar control\n  //--------------------------------------------\n  handleCloseSnackBar = (event, reason) => {\n    if (reason === 'clickaway') {\n      // console.log('clicked snackbar close clickaway')\n      return;\n    }\n    // console.log('clicked snackbar close close')\n    this.signal_generating_status.open_snack_bar = false  //({ open: false });\n  }\n\n\n  afterCreationSnackBarUpdate() {\n    this.signal_generating_status.open_snack_bar = false;\n    this.signal_generating_status.open_snack_bar = true;\n    this.signal_generating_status.loading = false;\n    this.signal_generating_status.message = 'Signal Created!';\n  }\n}\n\ndecorate(DataStore, {\n  series: observable,\n  author: observable,\n  handleEditBut: action,\n  importDataFromFile: action,\n  formattedTableData: computed,\n  faultType: observable,\n  faultConfig: observable,\n  handleFaultTypeSelection: action,\n  handleFaultConfig: action,\n  numberPointsCreation: observable,\n  tagCreation: observable,\n  handleNumberPointsCreation: action,\n  handleTagCreation: action,\n  noiseStd: observable,\n  handleNoiseAddition: action,\n  currFaultConfig: observable,\n  signal_generating_status: observable,\n  // is_signal_created_successfully: observable,\n})\n\n\nconst observableDataStore = new DataStore();\nexport default observableDataStore\n\nwindow.dataStore = observableDataStore\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import { Router } from 'react-router'\n// import createBrowserHistory from 'history/createBrowserHistory'\n// import { RouterStore, syncHistoryWithStore } from 'mobx-react-router'\nimport dataStore from './store/DataStore'\nimport { Provider } from 'mobx-react'\nimport { RouterStore, startRouter } from 'mobx-router'\nimport views from './config/views'\n// import { configure } from \"mobx\"\n\nwindow.__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__ = true\n\n// issue with router? Check how to configure for particular store\n// configure({ enforceActions: 'observed' })\nconst stores = {\n  // Key can be whatever you want\n  router: new RouterStore(),\n  store: dataStore,\n  // ...other stores\n}\n\nstartRouter(views, stores)\n\n\nReactDOM.render((\n  <Provider store={stores}>\n    {/* <MobxRouter> */}\n      <App />\n    {/* </MobxRouter> */}\n  </Provider>\n),\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}